{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\n\nconst Constants_1 = require(\"./Constants\");\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchEndHandler = () => this.mouseTouchFinish();\n\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n    this.mouseDownHandler = () => this.mouseDown();\n\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  manageListeners(add) {\n    var _a;\n\n    const container = this.container;\n    const options = container.options;\n    const detectType = options.interactivity.detectsOn;\n    let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n\n    if (detectType === \"window\") {\n      container.interactivity.element = window;\n      mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n    } else if (detectType === \"parent\" && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (!interactivityEl) {\n      return;\n    }\n\n    const html = interactivityEl;\n\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      } else {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n      }\n\n      manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n\n    if (options.interactivity.events.resize) {\n      manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n    }\n\n    if (document) {\n      manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n\n  handleWindowResize() {\n    var _a;\n\n    (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n  }\n\n  handleVisibilityChange() {\n    const container = this.container;\n    const options = container.options;\n    this.mouseTouchFinish();\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw();\n      }\n    }\n  }\n\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    const container = this.container;\n    const options = container.options;\n\n    if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n      return;\n    }\n\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === \"parent\") {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n        const canvasEl = container.canvas.element;\n\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          const canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity === undefined) {\n      return;\n    }\n\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n    const mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n\n    if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.clickPositionValid !== undefined) {\n        handled = plugin.clickPositionValid(mousePosition);\n\n        if (handled) {\n          break;\n        }\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n\n    mouse.clicking = false;\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos) {\n        container.interactivity.mouse.clickPosition = {\n          x: mousePos.x,\n          y: mousePos.y\n        };\n      } else {\n        return;\n      }\n\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const options = container.options;\n    const pushNb = options.interactivity.modes.push.quantity;\n    const removeNb = options.interactivity.modes.remove.quantity;\n\n    switch (mode) {\n      case \"push\":\n        {\n          if (pushNb > 0) {\n            container.particles.push(pushNb, container.interactivity.mouse);\n          }\n\n          break;\n        }\n\n      case \"remove\":\n        container.particles.removeQuantity(removeNb);\n        break;\n\n      case \"bubble\":\n        container.bubble.clicking = true;\n        break;\n\n      case \"repulse\":\n        container.repulse.clicking = true;\n        container.repulse.count = 0;\n\n        for (const particle of container.repulse.particles) {\n          particle.velocity.horizontal = particle.initialVelocity.horizontal;\n          particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n\n        container.repulse.particles = [];\n        container.repulse.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.repulse.clicking = false;\n          }\n        }, options.interactivity.modes.repulse.duration * 1000);\n        break;\n\n      case \"attract\":\n        container.attract.clicking = true;\n        container.attract.count = 0;\n\n        for (const particle of container.attract.particles) {\n          particle.velocity.horizontal = particle.initialVelocity.horizontal;\n          particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n\n        container.attract.particles = [];\n        container.attract.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.attract.clicking = false;\n          }\n        }, options.interactivity.modes.attract.duration * 1000);\n        break;\n\n      case \"pause\":\n        if (container.getAnimationStatus()) {\n          container.pause();\n        } else {\n          container.play();\n        }\n\n        break;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n\n}\n\nexports.EventListeners = EventListeners;","map":{"version":3,"sources":["/Users/ashraychowdhry/Documents/GitHub/ashraysportfolio/node_modules/tsparticles/dist/Utils/EventListeners.js"],"names":["Object","defineProperty","exports","value","EventListeners","Constants_1","require","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","_a","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","window","mouseOutEvent","canvas","canvasEl","parentElement","parentNode","interactivityEl","html","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","style","pointerEvents","resize","resizeEvent","document","visibilityChangeEvent","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","setTimeout","pushNb","modes","push","quantity","removeNb","remove","particles","removeQuantity","bubble","repulse","count","particle","velocity","horizontal","initialVelocity","vertical","finish","destroyed","duration","attract"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        var _a;\n        (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.options;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.options;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.options;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case \"push\": {\n                if (pushNb > 0) {\n                    container.particles.push(pushNb, container.interactivity.mouse);\n                }\n                break;\n            }\n            case \"remove\":\n                container.particles.removeQuantity(removeNb);\n                break;\n            case \"bubble\":\n                container.bubble.clicking = true;\n                break;\n            case \"repulse\":\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                    particle.velocity.vertical = particle.initialVelocity.vertical;\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case \"attract\":\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                    particle.velocity.vertical = particle.initialVelocity.vertical;\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case \"pause\":\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"]},"metadata":{},"sourceType":"script"}