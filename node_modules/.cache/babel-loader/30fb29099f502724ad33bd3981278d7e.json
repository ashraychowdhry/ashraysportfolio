{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nclass Emitters {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    const overridableContainer = container;\n\n    overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n\n    overridableContainer.playEmitter = idx => {\n      const emitter = this.array[idx || 0];\n\n      if (emitter) {\n        emitter.play();\n      }\n    };\n\n    overridableContainer.pauseEmitter = idx => {\n      const emitter = this.array[idx !== null && idx !== void 0 ? idx : 0];\n\n      if (emitter) {\n        emitter.pause();\n      }\n    };\n  }\n\n  init(options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.emitters) {\n      if (options.emitters instanceof Array) {\n        this.emitters = options.emitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.emitters instanceof Array) {\n          this.emitters = new Emitter_1.Emitter();\n        }\n\n        this.emitters.load(options.emitters);\n      }\n    }\n\n    const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n    if (interactivityEmitters) {\n      if (interactivityEmitters instanceof Array) {\n        this.interactivityEmitters = interactivityEmitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = new Emitter_1.Emitter();\n        }\n\n        this.interactivityEmitters.load(interactivityEmitters);\n      }\n    }\n\n    if (this.emitters instanceof Array) {\n      for (const emitterOptions of this.emitters) {\n        this.addEmitter(emitterOptions);\n      }\n    } else {\n      this.addEmitter(this.emitters);\n    }\n  }\n\n  play() {\n    for (const emitter of this.array) {\n      emitter.play();\n    }\n  }\n\n  pause() {\n    for (const emitter of this.array) {\n      emitter.pause();\n    }\n  }\n\n  stop() {\n    this.array = [];\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const emitterOptions = this.emitters;\n    const modeEmitters = this.interactivityEmitters;\n\n    if (mode === \"emitter\") {\n      let emitterModeOptions;\n\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n\n      const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n      const ePosition = container.interactivity.mouse.clickPosition;\n      this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n    }\n  }\n\n  resize() {\n    for (const emitter of this.array) {\n      emitter.resize();\n    }\n  }\n\n  addEmitter(options, position) {\n    const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n    this.array.push(emitter);\n    return emitter;\n  }\n\n  removeEmitter(emitter) {\n    const index = this.array.indexOf(emitter);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n\n}\n\nexports.Emitters = Emitters;","map":{"version":3,"sources":["/Users/ashraychowdhry/Documents/GitHub/ashraysportfolio/node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js"],"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Utils_1","Emitter_1","constructor","container","array","emitters","interactivityEmitters","overridableContainer","addEmitter","options","position","playEmitter","idx","emitter","play","pauseEmitter","pause","init","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","stop","handleClickMode","mode","modeEmitters","emitterModeOptions","length","Utils","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","removeEmitter","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idx) => {\n            const emitter = this.array[idx || 0];\n            if (emitter) {\n                emitter.play();\n            }\n        };\n        overridableContainer.pauseEmitter = (idx) => {\n            const emitter = this.array[idx !== null && idx !== void 0 ? idx : 0];\n            if (emitter) {\n                emitter.pause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"]},"metadata":{},"sourceType":"script"}