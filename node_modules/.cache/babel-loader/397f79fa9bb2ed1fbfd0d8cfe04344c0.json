{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repulser = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass Repulser {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const options = container.options;\n    const mouse = container.interactivity.mouse;\n    const events = options.interactivity.events;\n    const divs = events.onDiv;\n    const divRepulse = Utils_1.Utils.isDivModeEnabled(\"repulse\", divs);\n\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return Utils_1.Utils.isInArray(\"repulse\", hoverMode) || Utils_1.Utils.isInArray(\"repulse\", clickMode) || divRepulse;\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container;\n    const options = container.options;\n    const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n    const events = options.interactivity.events;\n    const hoverEnabled = events.onHover.enable;\n    const hoverMode = events.onHover.mode;\n    const clickEnabled = events.onClick.enable;\n    const clickMode = events.onClick.mode;\n    const divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(\"repulse\", hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(\"repulse\", clickMode)) {\n      this.clickRepulse();\n    } else {\n      Utils_1.Utils.divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n\n  singleSelectorRepulse(selector, div) {\n    const container = this.container;\n    const query = document.querySelectorAll(selector);\n\n    if (!query.length) {\n      return;\n    }\n\n    query.forEach(item => {\n      const elem = item;\n      const pxRatio = container.retina.pixelRatio;\n      const pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      };\n      const repulseRadius = elem.offsetWidth / 2 * pxRatio;\n      const area = div.type === \"circle\" ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n      const divs = container.options.interactivity.modes.repulse.divs;\n      const divRepulse = Utils_1.Utils.divMode(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n\n  hoverRepulse() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const repulseRadius = container.retina.repulseModeDistance;\n    this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n\n    const container = this.container;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = Utils_1.NumberUtils.getDistances(particle.position, position);\n      const normVec = {\n        x: dx / distance,\n        y: dy / distance\n      };\n      const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.options.interactivity.modes.repulse.speed) * 100;\n      const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n      particle.position.x = particle.position.x + normVec.x * repulseFactor;\n      particle.position.y = particle.position.y + normVec.y * repulseFactor;\n    }\n  }\n\n  clickRepulse() {\n    const container = this.container;\n\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n\n      container.repulse.count++;\n\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance;\n      const repulseRadius = Math.pow(repulseDistance / 6, 3);\n      const mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n      const query = container.particles.quadTree.query(range);\n\n      for (const particle of query) {\n        const {\n          dx,\n          dy,\n          distance\n        } = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position);\n        const d = distance * distance;\n        const velocity = container.options.interactivity.modes.repulse.speed;\n        const force = -repulseRadius * velocity / d;\n\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const angle = Math.atan2(dy, dx);\n          particle.velocity.horizontal = force * Math.cos(angle);\n          particle.velocity.vertical = force * Math.sin(angle);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.horizontal = particle.initialVelocity.horizontal;\n        particle.velocity.vertical = particle.initialVelocity.vertical;\n      }\n\n      container.repulse.particles = [];\n    }\n  }\n\n}\n\nexports.Repulser = Repulser;","map":{"version":3,"sources":["/Users/ashraychowdhry/Documents/GitHub/ashraysportfolio/node_modules/tsparticles/dist/Interactions/External/Repulser.js"],"names":["Object","defineProperty","exports","value","Repulser","Utils_1","require","constructor","container","isEnabled","options","mouse","interactivity","events","divs","onDiv","divRepulse","Utils","isDivModeEnabled","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","divModeExecute","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","Circle","Rectangle","modes","repulse","divMode","processRepulse","mousePos","repulseModeDistance","_a","particles","quadTree","particle","dx","dy","distance","NumberUtils","getDistances","normVec","velocity","speed","repulseFactor","clamp","Math","pow","finish","count","clicking","repulseDistance","mouseClickPos","undefined","range","d","force","push","angle","atan2","horizontal","cos","vertical","sin","initialVelocity"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Repulser {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divRepulse = Utils_1.Utils.isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(\"repulse\", hoverMode) || Utils_1.Utils.isInArray(\"repulse\", clickMode) || divRepulse);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.options;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === \"circle\"\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const divs = container.options.interactivity.modes.repulse.divs;\n            const divRepulse = Utils_1.Utils.divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.options.interactivity.modes.repulse.speed) * 100;\n            const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n            particle.position.x = particle.position.x + normVec.x * repulseFactor;\n            particle.position.y = particle.position.y + normVec.y * repulseFactor;\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n            const query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position);\n                const d = distance * distance;\n                const velocity = container.options.interactivity.modes.repulse.speed;\n                const force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const angle = Math.atan2(dy, dx);\n                    particle.velocity.horizontal = force * Math.cos(angle);\n                    particle.velocity.vertical = force * Math.sin(angle);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                particle.velocity.vertical = particle.initialVelocity.vertical;\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n"]},"metadata":{},"sourceType":"script"}